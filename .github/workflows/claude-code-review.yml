---
name: Claude Code Review
on:
  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"
jobs:
  claude-review:
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    if: |
      github.event.pull_request.user.login != 'dependabot[bot]' &&
      github.event.pull_request.user.login != 'renovate[bot]'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1
      - uses: cachix/install-nix-action@fc6e360bedc9ee72d75e701397f0bb30dce77568 # v31.5.2
      - uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: gamoutatsumi-nix-config
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - uses: nicknovitski/nix-develop@9be7cfb4b10451d3390a75dc18ad0465bed4932a # v1.2.1
        with:
          arguments: --accept-flake-config
      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@1b4ac7d7e0f097d23bf4730891060f8d3c11f580 # v0.0.51
        with:
          model: "claude-opus-4-0"
          fallback_model: "claude-sonnet-4-0"
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          additional_permissions: |
            actions: read
          allowed_tools: |
            mcp__git__*
            Bash(git push)
            Bash(rm -rf)
            Bash(rm)
            mcp__sequential-thinking__sequentialthinking
          direct_prompt: |
            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage

            Be constructive and helpful in your feedback.
            You should use the `mcp__sequential-thinking__sequentialthinking` to analyze the code and provide a detailed review.
            Please write reviews in Japanese.

# Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
# use_sticky_comment: true

# Optional: Customize review based on file types
# direct_prompt: |
#   Review this PR focusing on:
#   - For TypeScript files: Type safety and proper interface usage
#   - For API endpoints: Security, input validation, and error handling
#   - For React components: Performance, accessibility, and best practices
#   - For tests: Coverage, edge cases, and test quality

# Optional: Different prompts for different authors
# direct_prompt: |
#   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' &&
#   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
#   'Please provide a thorough code review focusing on our coding standards and best practices.' }}

# Optional: Add specific tools for running tests or linting
# allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"

# Optional: Skip review for certain conditions
# if: |
#   !contains(github.event.pull_request.title, '[skip-review]') &&
#   !contains(github.event.pull_request.title, '[WIP]')
