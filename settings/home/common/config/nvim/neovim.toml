[[plugins]]
repo = 'tversteeg/registers.nvim'
lua_add = '''
require('registers').setup {}
'''

[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
hooks_file = '$BASE_DIR/dpp/gitsigns.lua'

[[plugins]]
repo = 'nvim-lualine/lualine.nvim'
depends = ['avante-status.nvim']
hooks_file = '$BASE_DIR/dpp/lualine.lua'

[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'

[[plugins]]
repo = 'romgrk/barbar.nvim'
hooks_file = ["$BASE_DIR/dpp/barbar.vim", "$BASE_DIR/dpp/barbar.lua"]

[[plugins]]
repo = 'nvim-lua/popup.nvim'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'phaazon/hop.nvim'
hooks_file = '$BASE_DIR/dpp/hop.lua'

[[plugins]]
repo = 'kwkarlwang/bufresize.nvim'

[[plugins]]
repo = 'aserowy/tmux.nvim'
lua_add = '''
require('tmux').setup({
  navigation = {
    enable_default_keybindings = true,
  },
  copy_sync = {
    enable = false,
  },
})
'''

[[plugins]]
repo = 'MunifTanjim/nui.nvim'

[[plugins]]
repo = 'zah/nim.vim'

[[plugins]]
repo = 'levouh/tint.nvim'
lua_add = '''
require('tint').setup {}
'''

[[plugins]]
repo = 'uga-rosa/ccc.nvim'
lua_add = '''
require('ccc').setup {}
'''

[[plugins]]
repo = 'rcarriga/nvim-notify'
lua_add = '''
  require('notify').setup {
    background_colour = "#000000",
  }
'''

[[plugins]]
repo = 'monaqa/dial.nvim'
hooks_file = ['$BASE_DIR/dpp/dial.vim']

[[plugins]]
repo = 'ray-x/guihua.lua'

[[plugins]]
repo = 'linrongbin16/gitlinker.nvim'
lua_add = '''
require('gitlinker').setup()
'''

[[plugins]]
repo = 'stevearc/aerial.nvim'
hooks_file = '$BASE_DIR/dpp/aerial.lua'

[[plugins]]
repo = 'tani/podium'
lua_add = '''
vim.api.nvim_create_user_command("Podium", function()
  local podium = require("podium")
  local lines = vim.api.nvim_buf_get_lines(0, 0, -1, true)
  local output = podium.process(podium.html, table.concat(lines, "\n"))
  vim.api.nvim_buf_set_lines(0, 0, -1, true, vim.split(output, "\n"))
  vim.api.nvim_set_option_value("modified", false, { buf = 0 })
  vim.api.nvim_set_option_value("filetype", "html", { buf = 0 })
end, {})
'''

[[plugins]]
repo = 'uga-rosa/translate.nvim'
lua_add = '''
require("translate").setup {
   default = {
      command = "google",
      output = "floating",
      parse_after = "head"
   }
}
'''

[[plugins]]
repo = 'lukas-reineke/indent-blankline.nvim'
hooks_file = ["$BASE_DIR/dpp/indent_blankline.lua"]

[[plugins]]
repo = 'numToStr/Comment.nvim'
hooks_file = ['$BASE_DIR/dpp/comment.lua']

[[plugins]]
repo = 'bakpakin/Fennel'
rev = '1.3.1'
rtp = 'nvim'
extAttrs = { installerBuild = 'make LUA="nvim -ll" fennel.lua && mv fennel.lua nvim/lua/fennel.lua' }

[[plugins]]
repo = 'j-hui/fidget.nvim'
rev = 'v1.4.5'
hooks_file = ['$BASE_DIR/dpp/fidget.lua']

[[plugins]]
repo = 'CopilotC-Nvim/CopilotChat.nvim'
lua_add = '''
require('CopilotChat').setup {
  language = 'Japanese'
}
'''

[[plugins]]
repo = 'stevearc/dressing.nvim'
hooks_file = ['$BASE_DIR/dpp/dressing.lua']

[[plugins]]
repo = 'stevearc/oil.nvim'
lua_add = '''
require('oil').setup()
'''

[[plugins]]
repo = 'stevearc/overseer.nvim'
lua_add = '''
require('overseer').setup()
'''

[[plugins]]
repo = 'wojciech-kulik/xcodebuild.nvim'

[[plugins]]
repo = 'liangxianzhe/floating-input.nvim'
lua_add = '''
vim.ui.input = function(opts, on_confirm)
  require('floating-input').input(opts, on_confirm, { border = 'double' })
end
'''

[[plugins]]
repo = 'yetone/avante.nvim'
depends = ['avante-status.nvim']
hooks_file = ['$BASE_DIR/dpp/avante.lua']
merged = false
extAttrs = { installerBuild = 'make' }

[[plugins]]
repo = 'HakonHarnes/img-clip.nvim'
lua_add = '''
require('img-clip').setup {
default = {
  embed_image_as_base64 = false,
  prompt_for_file_name = false,
  drag_and_drop = {
    insert_mode = true,
  },
},
}
'''

[[plugins]]
repo = 'takeshid/avante-status.nvim'
lua_add = '''
require('avante-status').setup()
'''

[[plugins]]
repo = 'zbirenbaum/copilot.lua'
on_event = ['InsertEnter']
hooks_file = ['$BASE_DIR/dpp/copilot.lua']
